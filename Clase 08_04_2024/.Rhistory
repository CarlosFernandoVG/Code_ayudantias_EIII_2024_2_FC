knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#library(readxl)
library(survminer)
library(survival)
employees <- read_csv("Uncleaned_employees_final_dataset (1).csv")
employees$avg_training_score %>% hist()
employees$avg_training_score %>% hist()
employees %>% ggplot(aes(x = avg_training_score)) + geom_boxplot()
employees$avg_training_score %>% quantile()
employees <- employees %>% mutate(good = if_else(avg_training_score >= 60, 1, 0))
employees$length_of_service %>% is.na() %>% sum()
ajusteSurv <- survfit(Surv(employees$length_of_service, employees$good)~1)
typeof(ajusteSurv)
ajusteSurv$surv
tibble(time = ajusteSurv$time, surv = ajusteSurv$surv) %>% ggplot(aes(x = time, y = surv)) + geom_step()
employees %>% ggplot(aes(x = department)) + geom_bar()
employees_RD <- employees %>% filter(department == "R&D")
employees_SM <- employees %>% filter(department == "Sales & Marketing")
ajusteSurv_RD <- survfit(Surv(employees_RD$length_of_service, employees_RD$good)~1)
ajusteSurv_SM <- survfit(Surv(employees_SM$length_of_service, employees_SM$good)~1)
ajusteSurv_RD <- survfit(Surv(employees_RD$length_of_service, employees_RD$good)~1)
ajusteSurv_SM <- survfit(Surv(employees_SM$length_of_service, employees_SM$good)~1)
tibble(time = ajusteSurv_RD$time, surv = ajusteSurv_RD$surv) %>% ggplot(aes(x = time, y = surv)) + geom_step(color = "forestgreen") +
geom_step(color = "deeppink2",data = tibble(time = ajusteSurv_SM$time, surv = ajusteSurv_SM$surv))
tibble(time = ajusteSurv_SM$time, surv = ajusteSurv_SM$surv) %>% ggplot(aes(x = time, y = surv)) + geom_step(color = "forestgreen")
employees$department %>% unique()
tibble(time = employees_HR$time, surv = employees_HR$surv) %>% ggplot(aes(x = time, y = surv, color = "HR")) + geom_step(color = "goldenrod2") +
geom_step(aes(color = "Finances"), color = "darkorchid3",data = tibble(time = employees_FI$time, surv = employees_FI$surv)) +
geom_step(aes(color = "Analytics"), color = "cornflowerblue",data = tibble(time = employees_AN$time, surv = employees_AN$surv))
employees_HR <- employees %>% filter(department == "HR")
employees_FI <- employees %>% filter(department == "Finance")
employees_AN <- employees %>% filter(department == "Analytics")
ajusteSurv_HR <- survfit(Surv(employees_HR$length_of_service, employees_HR$good)~1)
ajusteSurv_FI <- survfit(Surv(employees_FI$length_of_service, employees_FI$good)~1)
ajusteSurv_AN <- survfit(Surv(employees_AN$length_of_service, employees_AN$good)~1)
tibble(time = employees_HR$time, surv = employees_HR$surv) %>% ggplot(aes(x = time, y = surv, color = "HR")) + geom_step(color = "goldenrod2") +
geom_step(aes(color = "Finances"), color = "darkorchid3",data = tibble(time = employees_FI$time, surv = employees_FI$surv)) +
geom_step(aes(color = "Analytics"), color = "cornflowerblue",data = tibble(time = employees_AN$time, surv = employees_AN$surv))
employees_HR
tibble(time = ajusteSurv_HR$time, surv = ajusteSurv_HR$surv) %>% ggplot(aes(x = time, y = surv, color = "HR")) + geom_step(color = "goldenrod2") +
geom_step(aes(color = "Finances"), color = "darkorchid3",data = tibble(time = ajusteSurv_FI$time, surv = ajusteSurv_FI$surv)) +
geom_step(aes(color = "Analytics"), color = "cornflowerblue",data = tibble(time = ajusteSurv_AN$time, surv = ajusteSurv_AN$surv))
tibble(time = ajusteSurv_HR$time, surv = ajusteSurv_HR$surv) %>% ggplot(aes(x = time, y = surv, fill = "HR")) + geom_step(color = "goldenrod2") +
geom_step(aes(fill = "Finances"), color = "darkorchid3",data = tibble(time = ajusteSurv_FI$time, surv = ajusteSurv_FI$surv)) +
geom_step(aes(fill = "Analytics"), color = "cornflowerblue",data = tibble(time = ajusteSurv_AN$time, surv = ajusteSurv_AN$surv))
tibble(time = ajusteSurv_HR$time, surv = ajusteSurv_HR$surv) %>% ggplot(aes(x = time, y = surv, fill = "HR")) + geom_step(color = "goldenrod2") +
geom_step(aes(fill = "Finances"), color = "darkorchid3",data = tibble(time = ajusteSurv_FI$time, surv = ajusteSurv_FI$surv)) +
geom_step(aes(fill = "Analytics"), color = "cornflowerblue",data = tibble(time = ajusteSurv_AN$time, surv = ajusteSurv_AN$surv)) +
geom_step(color = "deeppink2",data = tibble(time = ajusteSurv_SM$time, surv = ajusteSurv_SM$surv))
employees_SM <- employees %>% filter(department == "Sales & Marketing")
ajusteSurv_SM <- survfit(Surv(employees_SM$length_of_service, employees_SM$good)~1)
tibble(time = ajusteSurv_HR$time, surv = ajusteSurv_HR$surv) %>% ggplot(aes(x = time, y = surv, fill = "HR")) + geom_step(color = "goldenrod2") +
geom_step(aes(fill = "Finances"), color = "darkorchid3",data = tibble(time = ajusteSurv_FI$time, surv = ajusteSurv_FI$surv)) +
geom_step(aes(fill = "Analytics"), color = "cornflowerblue",data = tibble(time = ajusteSurv_AN$time, surv = ajusteSurv_AN$surv)) +
geom_step(color = "deeppink2",data = tibble(time = employees_RD$time, surv = employees_RD$surv))
ajusteSurv_RD <- survfit(Surv(employees_RD$length_of_service, employees_RD$good)~1)
tibble(time = ajusteSurv_HR$time, surv = ajusteSurv_HR$surv) %>% ggplot(aes(x = time, y = surv, fill = "HR")) + geom_step(color = "goldenrod2") +
geom_step(aes(fill = "Finances"), color = "darkorchid3",data = tibble(time = ajusteSurv_FI$time, surv = ajusteSurv_FI$surv)) +
geom_step(aes(fill = "Analytics"), color = "cornflowerblue",data = tibble(time = ajusteSurv_AN$time, surv = ajusteSurv_AN$surv)) +
geom_step(color = "deeppink2",data = tibble(time = ajusteSurv_RD$time, surv = ajusteSurv_RD$surv))
employees
employees %>% group_by(department) %>% nest()
employees %>% group_by(department) %>% nest() %>%
mutate(surv_models = map(data, ~survfit(Surv(.x$length_of_service, .x$good)~1)))
models_surival_employees <- employees %>% group_by(department) %>% nest() %>%
mutate(surv_models = map(data, ~survfit(Surv(.x$length_of_service, .x$good)~1)))
models_surival_employees
models_surival_employees$surv_models
models_surival_employees$surv_models[[1]]
base_plot <- tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, fill = models_surival_employees$department[[1]])) + geom_step()
base_plot
base_plot <- tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, fill = models_surival_employees$department[[1]])) + geom_step(color = "asdas")
base_plot
base_plot <- tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, color = models_surival_employees$department[[1]])) + geom_step()
base_plot
length(models_surival_employees)
models_surival_employees
dim(models_surival_employees)
2:dim(models_surival_employees)
2:dim(models_surival_employees)[1]
for (g in 2:dim(models_surival_employees)[1]){
base_plot +
geom_step(aes(color = models_surival_employees$department[[g]]),
data = tibble(time = models_surival_employees$department[[g]]$time,
surv = models_surival_employees$department[[g]]$surv))
}
base_plot +
geom_step(aes(color = models_surival_employees$department[[g]]),
data = tibble(time = models_surival_employees$surv_models[[g]]$time,
surv = models_surival_employees$surv_models[[g]]$surv))
for (g in 2:dim(models_surival_employees)[1]){
base_plot +
geom_step(aes(color = models_surival_employees$department[[g]]),
data = tibble(time = models_surival_employees$surv_models[[g]]$time,
surv = models_surival_employees$surv_models[[g]]$surv))
}
base_plot <- tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, color = models_surival_employees$department[[1]])) + geom_step()
for (g in 2:dim(models_surival_employees)[1]){
base_plot +
geom_step(aes(color = models_surival_employees$department[[g]]),
data = tibble(time = models_surival_employees$surv_models[[g]]$time,
surv = models_surival_employees$surv_models[[g]]$surv))
}
base_plot <- tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, color = models_surival_employees$department[[1]])) + geom_step()
for (g in 2:dim(models_surival_employees)[1]){
base_plot <- base_plot +
geom_step(aes(color = models_surival_employees$department[[g]]),
data = tibble(time = models_surival_employees$surv_models[[g]]$time,
surv = models_surival_employees$surv_models[[g]]$surv))
}
base_plot
library(plotly)
ggplotly(base_plot)
base_plot <- tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, color = models_surival_employees$department[[1]])) + geom_step()
for (g in 2:dim(models_surival_employees)[1]){
department <- models_surival_employees$department[[g]]
base_plot <- base_plot +
geom_step(aes(color = department),
data = tibble(time = models_surival_employees$surv_models[[g]]$time,
surv = models_surival_employees$surv_models[[g]]$surv))
}
ggplotly(base_plot)
departments <- models_surival_employees$department
models_surival_employees <- employees %>% group_by(department) %>% nest() %>%
mutate(surv_models = map(data, ~survfit(Surv(.x$length_of_service, .x$good)~1)))
models_surival_employees <- employees %>% group_by(department) %>% nest() %>%
mutate(surv_models = map(data, ~survfit(Surv(.x$length_of_service, .x$good)~1)))
departments <- models_surival_employees$department
base_plot <- tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, color = departments[[1]])) + geom_step()
base_plot
for (g in 2:dim(models_surival_employees)[1]){
department <- departments[[g]]
base_plot <- base_plot +
geom_step(aes(color = department),
data = tibble(time = models_surival_employees$surv_models[[g]]$time,
surv = models_surival_employees$surv_models[[g]]$surv))
}
base_plot
tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, color = eval(departments[[1]]))) + geom_step()
base_plot <- tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, color = !!departments[[1]])) + geom_step()
base_plot
for (g in 2:dim(models_surival_employees)[1]){
department <- departments[[g]]
base_plot <- base_plot +
geom_step(aes(color = !!department),
data = tibble(time = models_surival_employees$surv_models[[g]]$time,
surv = models_surival_employees$surv_models[[g]]$surv))
}
base_plot
ggThemeAssist:::ggThemeAssistAddin()
base_plot + scale_color_viridis(discrete = TRUE)
library("viridis")
base_plot + scale_color_viridis(discrete = TRUE)
library(RColorBrewer)
base_plot + scale_color_brewer(palette = "Dark2")
library("ggsci")
base_plot + scale_color_tron()
base_plot + pal_jco()
scale_color_brewer(palette = "Dark2")
base_plot + scale_color_brewer(palette = "Dark2")
base_plot + scale_color_viridis(discrete = TRUE)
models_surival_employees$department
base_plot + scale_color_manual(colores_departamentos)
colores_departamentos <- c("Technology" = "#1f77b4",     # Azul
"HR" = "#ff7f0e",            # Naranja
"Sales & Marketing" = "#d62728",  # Rojo
"Procurement" = "#2ca02c",   # Verde
"Finance" = "#6baed6",       # Azul claro
"Analytics" = "#9467bd",     # Morado
"Operations" = "#8c564b",    # Marrón
"Legal" = "#7f7f7f",         # Gris
"R&D" = "#17becf")          # Turquesa
base_plot + scale_color_manual(colores_departamentos)
base_plot + scale_color_manual(values = colores_departamentos)
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal()
employees
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labels(x = "Age", y = "Survival of department")
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Survival of department")
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Survival of department") +
guides(colour = "Department")
guides(guides(fill=guide_legend(title="New Legend Title"))
guides(fill=guide_legend(title="New Legend Title")
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Survival of department") +
guides(fill=guide_legend(title="New Legend Title"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Survival of department") +
guides(colour=guide_legend(title="New Legend Title"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Survival of department") +
guides(colour=guide_legend(title="Departments"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Survival of department") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom")
library(extrafont)
font_import()
#font_import()
loadfonts(device = "win")
fonts()
font_import()
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Survival of department") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto"))
ggThemeAssist:::ggThemeAssistAddin()
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Survival of department") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto")) + theme(panel.grid.major = element_line(linetype = "blank"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Survival of department") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto")) +
theme(panel.grid.major = element_line(linetype = "blank"),
panel.grid.minor = element_line(linetype = "blank"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Survival of department") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
labs(x = "Age", y = "Probability of getting high avg training score ") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
title("Probability of obtaining a high average training score") +
labs(x = "Age", y = "Probability of getting high avg training score") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
ggtitle("Probability of obtaining a high average training score") +
labs(x = "Age", y = "Probability of getting high avg training score") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
ggtitle("Probability") +
labs(x = "Age", y = "Probability of getting high avg training score by department") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
ggtitle("Probability of obtaining a high average training score by department") +
labs(x = "Age", y = "Probability") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
ggtitle("Probability of obtaining a high average training score by department") +
labs(x = "Age", y = "") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
ggtitle("Probability of obtaining a high average training score by department") +
labs(x = "Length of service", y = "") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto"))
theme(panel.grid.minor = element_line(linetype = "blank"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
ggtitle("Probability of obtaining a high average training score by department") +
labs(x = "Length of service", y = "") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto")) +
theme(panel.grid.minor = element_line(linetype = "blank"))
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
ggtitle("Probability of obtaining a high average training score by department") +
labs(x = "Length of service", y = "") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto")) +
scale_x_continuous(breaks = NULL)
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
ggtitle("Probability of obtaining a high average training score by department") +
labs(x = "Length of service", y = "") +
guides(colour=guide_legend(title="Departments")) +
theme(legend.position="bottom",
text=element_text(family="Roboto")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank())
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
ggtitle("Probability of obtaining a high average training score by department") +
labs(x = "Length of service", y = "") +
guides(colour=guide_legend(title="Departments:")) +
theme(legend.position="bottom",
text=element_text(family="Roboto")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank())
base_plot +
scale_color_manual(values = colores_departamentos)
#font_import()
models_surival_employees <- employees %>% group_by(department) %>% nest() %>%
mutate(surv_models = map(data, ~survfit(Surv(.x$length_of_service, .x$good)~1)))
departments <- models_surival_employees$department
departments
base_plot <- tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, color = departments[[1]])) + geom_step()
for (g in 2:dim(models_surival_employees)[1]){
department <- departments[[g]]
base_plot <- base_plot +
geom_step(aes(color = department),
data = tibble(time = models_surival_employees$surv_models[[g]]$time,
surv = models_surival_employees$surv_models[[g]]$surv))
}
base_plot
#font_import()
models_surival_employees <- employees %>% group_by(department) %>% nest() %>%
mutate(surv_models = map(data, ~survfit(Surv(.x$length_of_service, .x$good)~1)))
departments <- models_surival_employees$department
base_plot <- tibble(time = models_surival_employees$surv_models[[1]]$time,
surv = models_surival_employees$surv_models[[1]]$surv) %>%
ggplot(aes(x = time, y = surv, color = !!departments[[1]])) + geom_step()
for (g in 2:dim(models_surival_employees)[1]){
department <- departments[[g]]
base_plot <- base_plot +
geom_step(aes(color = !!department),
data = tibble(time = models_surival_employees$surv_models[[g]]$time,
surv = models_surival_employees$surv_models[[g]]$surv))
}
base_plot
base_plot +
scale_color_manual(values = colores_departamentos)
base_plot +
scale_color_manual(values = colores_departamentos)
base_plot +
scale_color_manual(values = colores_departamentos) +
theme_minimal() +
ggtitle("Probability of obtaining a high average training score by department") +
labs(x = "Length of service", y = "") +
guides(colour=guide_legend(title="Departments:")) +
theme(legend.position="bottom",
text=element_text(family="Roboto")) +
theme(panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank())
ajusteSurv_HR
Time = ajusteSurv_HR$time, Surv= ajusteSurv_HR$
tibble(Time = ajusteSurv_HR$time, Surv= ajusteSurv_HR$surv)
HRSurv <- tibble(Time = ajusteSurv_HR$time, Surv= ajusteSurv_HR$surv)
HRSurv_risk <- HRSurv %>% # Tomamos los datos
mutate(Surv_aux = lead(Surv)) %>% # Recorremos la supervivencia para facilitar los cálculos
mutate(quotien = Surv_aux/Surv) %>% # Hacemos el cociente
mutate(Risk_rate = 1-quotien) %>% #Obtenemos la tasa de fallo
head(-1)
HRSurv_risk
HRSurv %>% # Tomamos los datos
mutate(Surv_aux = lead(Surv)) %>% # Recorremos la supervivencia para facilitar los cálculos
mutate(quotien = Surv_aux/Surv) %>% # Hacemos el cociente
mutate(Risk_rate = 1-quotien)
HRSurv_risk <- HRSurv %>% # Tomamos los datos
mutate(Surv_aux = lead(Surv)) %>% # Recorremos la supervivencia para facilitar los cálculos
mutate(quotien = Surv_aux/Surv) %>% # Hacemos el cociente
mutate(Risk_rate = 1-quotien) %>% #Obtenemos la tasa de fallo
head(-1)
HRSurv_risk
HRSurv_risk %>% ggplot(aes(x = Risk_rate)) + geom_step()
HRSurv_risk %>% ggplot(aes(x = Risk_rate)) + geom_line()
HRSurv_risk
HRSurv_risk %>% ggplot(aes(x = Time, y = Risk_rate)) + geom_line()
HRSurv_risk$Risk_rate %>% cumsum() %>%
as_tibble() %>% # Una buena estructura de datos
mutate(Time = row_number()) %>% # Añadimos un índice para el tiempo
dplyr::select(Time, value) %>%  # Para un buen orden
rename("$t$" = Time, "$H(t)$" = value)
HRSurv_risk$Risk_rate %>% cumsum() %>%
as_tibble() %>% # Una buena estructura de datos
mutate(Time = row_number()) %>% # Añadimos un índice para el tiempo
dplyr::select(Time, value) %>%  # Para un buen orden
rename(Time = Time, H = value) %>% ggplot(aes(x =Time, y = H)) + geom_line()
?rev
summary_survival <- function(time, datos_surv){
list("Mean" =  sum(datos_surv),
"Var" = 2*sum(time*datos_surv)-sum(datos_surv)^2,
"Residual_median" = tibble(Time = time,
mr = rev(cumsum(datos_surv))/datos_surv))
}
summary_survival(ajusteSurv_HR$time, ajusteSurv_HR$surv)
summary_survival(ajusteSurv_HR$time, ajusteSurv_HR$surv) %>%
ggplot(aes(x = Time, y = mr)) + geom_line()
summary_survival(ajusteSurv_HR$time, ajusteSurv_HR$surv)[[2]] %>%
ggplot(aes(x = Time, y = mr)) + geom_line()
summary_survival(ajusteSurv_HR$time, ajusteSurv_HR$surv)
summary_survival(ajusteSurv_HR$time, ajusteSurv_HR$surv)$Residual_median %>%
ggplot(aes(x = Time, y = mr)) + geom_line()
